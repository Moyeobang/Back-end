<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.house.model.mapper.HouseMapper">
	<select id="listHouse" parameterType="map" resultType="houseDto">
		select aptCode, buildYear, roadName, roadNameBonbun, roadNameBubun, roadNameSeq, roadNameBasementCode, roadNameCode, dong, bonbun,  bubun, sigunguCode, eubmyundongCode, dongCode, landCode, apartmentName, jibun, lng, lat
		from houseinfo
		<where>
			<if test="dongCode != null and dongCode != ''">dongCode = #{dongCode}</if>
			<if test="apartmentName != null and apartment != ''">and apartmentName like concat('%', #{apartmentName}, '%')</if>
		</where>
		order by aptCode desc limit ${start}, ${spl}
	</select>
	<select id="totalHouseCount" parameterType="map" resultType="int">
		select count(*)
		from houseinfo
		<where>
			<if test="dongCode != null and dongCode != ''">dongCode = #{dongCode}</if>
			<if test="apartmentName != null and apartment != ''">and apartmentName like concat('%', #{apartmentName}, '%')</if>
		</where>
	</select>
	<select id="getHouse" parameterType="long" resultType="houseDto">
		select *
		from houseinfo
		where aptCode = #{aptCode}
	</select>
	
	<insert id="insertHouse" parameterType="houseDto">
		insert into houseinfo
		value (#{aptCode}, #{buildYear}, #{roadName}, #{roadNameBonbun}, #{roadNameBubun}, #{roadNameSeq}, #{roadNameBasementCode}, #{roadNameCode}, #{dong}, #{bonbun},  #{bubun}, #{sigunguCode}, #{eubmyundongCode}, #{dongCode}, #{landCode}, #{apartmentName}, #{jibun}, #{lng}, #{lat}
		)
	</insert>
	
	<select id="listDeal" parameterType="long" resultType="houseDealDto2">
		select NO, DEALAMOUNT, DEALYEAR, DEALMONTH, AREA, APTCODE
		from housedeal
		where aptCode = #{aptCode}
		order by area
	</select>
	
	<select id ="getHouseList" parameterType="map" resultType="houseInfoDto">
			select aptCode, lat, lng, apartmentName,
			concat(address, ' ', roadName, ' ', TRIM(LEADING '0' FROM roadNameBonbun), 
			case
				when roadNameBubun = '00000' then ''
				else concat('-', TRIM(LEADING '0' FROM roadNameBubun))
			end
			) as roadNameAddress,
			concat(address, ' ', dong, ' ', jibun) as jibunNameAddress,
			buildYear
			from
			(select aptCode, lat, lng, apartmentName, buildYear, dongcode, roadName, roadNameBonbun, roadNameBubun, dong, jibun
			from houseinfo
			<where>
				<if test="gugunCode != null">
					and dongCode LIKE concat(#{gugunCode}, '%') 
				</if>
				<if test="dongCode != null">
					and dongcode = #{dongCode} 
				</if>
				<if test="apartmentName != null">
					and apartmentName LIKE CONCAT('%',#{apartmentName},'%')
				</if>
					<if test="buildYearLow != null"><![CDATA[ buildYear >= #{buildYearLow} ]]> </if>
					<if test="buildYearHigh != null"><![CDATA[ and buildYear <= #{buildYearHigh} ]]> </if>
					<if test="minLat != null and minLat != null"> and lat between #{minLat} and #{maxLat} </if>
					<if test="minLng != null and minLng != null"> and lng between #{minLng} and #{maxLng} </if>
			</where>
			) HI
			join
			(select concat(sidoName, ' ', gugunName, ' ') as address, dongcode from dongcode) DC
			ON HI.dongcode = DC.dongcode;
	</select>
	
	
	<select id = "getHouseDealList" parameterType="map" resultType="houseDealInfoDto">
		select aptCode, dealAmount, concat(dealYear,'.',dealMonth,'.',dealDay) as date, area, floor
		from housedeal
		where aptCode = #{aptCode}
			<if test="budgetLow != null"><![CDATA[ and dealAmount >= #{budgetLow}]]></if>
			<if test="budgetHigh != null"><![CDATA[ and dealAmount <= #{budgetHigh}]]></if>
			<if test="areaLow != null"><![CDATA[ and area <= #{areaLow}]]></if>
			<if test="areaHigh != null"><![CDATA[ and area <= #{areaHigh}]]></if>
		order by dealYear desc;
	</select>
	
</mapper>